<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="
       http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       	http://www.springframework.org/schema/context
	http://www.springframework.org/schema/context/spring-context.xsd
       http://www.springframework.org/schema/mvc
	   http://www.springframework.org/schema/mvc/spring-mvc.xsd
	   	http://www.springframework.org/schema/aop
	http://www.springframework.org/schema/aop/spring-aop.xsd
       ">

    <aop:aspectj-autoproxy proxy-target-class="true"/>

    <context:component-scan base-package="person.louchen.restj.api"/>

    <bean id="apiExceptionHandler" class="person.louchen.restj.server.handler.ApiExcerptionHandler"/>

    <bean id="byteArrayHttpMessageConverter"
          class="org.springframework.http.converter.ByteArrayHttpMessageConverter"/>

    <bean id="stringMessageConverter"
          class="org.springframework.http.converter.StringHttpMessageConverter">
        <property name="supportedMediaTypes">
            <list>
                <value>text/html;charset=UTF-8</value>
            </list>
        </property>
    </bean>

    <bean id="jacksonObjectMapper" class="person.louchen.restj.server.jackson.JacksonObjectMapper" init-method="init">
        <property name="ignoreProperty"
                  value="version,handler,fieldHandler,hibernateLazyInitializer,JavassistLazyInitializer,PersistentSet"/>
        <property name="dateFormatPattern" value="yyyy-MM-dd HH:mm:ss"/>
    </bean>
    <bean id="jackson2HttpMessageConverter"
          class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
        <property name="objectMapper" ref="jacksonObjectMapper"/>
    </bean>

    <mvc:annotation-driven>
        <mvc:message-converters>
            <ref bean="byteArrayHttpMessageConverter"/>
            <ref bean="stringMessageConverter"/>
            <ref bean="jackson2HttpMessageConverter"/>
        </mvc:message-converters>
    </mvc:annotation-driven>

    <mvc:cors>
        <mvc:mapping path="/**"
                     allowed-origins="*"
                     allowed-methods="*"/>
    </mvc:cors>

    <mvc:interceptors>
        <!-- 第一个拦截器 请求签名验证 -->
        <!-- 约定1.不可有exclude -->
        <!-- 约定2.必须覆盖所有路径 -->
        <mvc:interceptor>
            <mvc:mapping path="/**"/>
            <bean class="person.louchen.restj.server.interceptor.SignInterceptor"/>
        </mvc:interceptor>
        <!-- 第二个拦截器 把requestSession中的关键信息存入threadlocal -->
        <!-- 约定1.不可有不拦截的路径 -->
        <!-- 约定2.必须覆盖所有路径 -->
        <mvc:interceptor>
            <mvc:mapping path="/**"/>
            <bean class="person.louchen.restj.server.interceptor.SessionInterceptor"/>
        </mvc:interceptor>
        <!-- 第三个拦截器 请求身份验证 -->
        <!-- 约定1.可有exclude -->
        <!-- 约定2.必须覆盖所有路径 -->
        <!-- 约定3.被拦截的方法如果带有@SkipAuth,会跳过验证 -->
        <mvc:interceptor>
            <mvc:mapping path="/**"/>
            <!--<mvc:exclude-mapping path="/example/**"/>-->
            <bean class="person.louchen.restj.server.interceptor.AuthInterceptor"/>
        </mvc:interceptor>
    </mvc:interceptors>

</beans>